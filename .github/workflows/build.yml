name: Build, Test & Deploy
on:
  push:
  pull_request:
  release:
    types:
      - published
env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  NETCORE_VERSION: '8.0.x'
  # Project name to pack and publish
  PROJECT_NAME: Blzr.BootstrapSelect
  # GitHub Packages Feed settings
  GITHUB_FEED: https://nuget.pkg.github.com/rob-newman/
  GITHUB_USER: rob-newman
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Official NuGet Feed settings
  NUGET_FEED: https://api.nuget.org/v3/index.json
  NUGET_KEY: ${{ secrets.NUGET_KEY }}
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{env.NETCORE_VERSION}}
          
      - name: Restore
        run: dotnet restore
        
      - name: Build
        run: dotnet build -c Release --no-restore
        
      - name: Test
        run: dotnet test -c Release
        
      - name: Pack
        if: matrix.os == 'ubuntu-latest'
        run: |
          VERSION="$(date +'%Y.%-m%-d.%-H%-M')" 
          dotnet pack -v normal -c Release --no-restore --include-symbols --include-source -p:PackageVersion=$VERSION --version-suffix=-ci src/$PROJECT_NAME/$PROJECT_NAME.*proj

                 
      - name: Upload Artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v2
        with:
          name: nupkg
          path: ./src/${{ env.PROJECT_NAME }}/bin/Release/*.nupkg
  prerelease:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{env.NETCORE_VERSION}}
    
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: nupkg
          
      - name: Push to GitHub Feed
        run: |
           for f in ./nupkg/*.nupkg
           do
            curl -vX PUT -u "$GITHUB_USER:$GITHUB_TOKEN" -F package=@$f $GITHUB_FEED
           done
           
      - name: Publish Sample Site
        run: dotnet publish -c Release samples/WebAssembly/WebAssembly.csproj
        
      - name: Rewrite base href
        uses: SteveSandersonMS/ghaction-rewrite-base-href@v1
        with:
          html_path: samples/WebAssembly/bin/Release/net7.0/publish/wwwroot/index.html
          base_href: /blzr.bootstrap-select/
               
      - name: Deploy to Github Pages
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: $GITHUB_TOKEN
          BASE_BRANCH: main # The branch the action should deploy from.
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: samples/WebAssembly/bin/Release/net7.0/publish/wwwroot # The folder the action should deploy.
          SINGLE_COMMIT: true
  deploy:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{env.NETCORE_VERSION}}
          
      - name: Create Release NuGet package
        run: |
          arrTag=(${GITHUB_REF//\// })
          VERSION="${arrTag[2]}" 
          echo Version: $VERSION
          VERSION="${VERSION//v}"
          echo Clean Version: $VERSION
          dotnet pack -v normal -c Release --include-symbols --include-source -p:PackageVersion=$VERSION -o nupkg src/$PROJECT_NAME/$PROJECT_NAME.*proj
          
      - name: Push to GitHub Feed
        run: |
          for f in ./nupkg/*.nupkg
          do
            curl -vX PUT -u "$GITHUB_USER:$GITHUB_TOKEN" -F package=@$f $GITHUB_FEED
          done
          
      - name: Push to NuGet Feed
        run: dotnet nuget push ./nupkg/*.nupkg --source $NUGET_FEED --skip-duplicate --api-key $NUGET_KEY

