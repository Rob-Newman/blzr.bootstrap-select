@page "/styling"
@inject HttpClient Http

<h1>Blzr.BootstrapSelect</h1>

@if (countries is null)
{
    <div class="triple-spinner">
    </div>
}
else
{
    <h2>Styling</h2>
    <!-- Default -->
    <BootstrapSelect TItem="Country" Data="@countries" TextField="@((item) => item.Name)" ValueField="@((item) => item.Id.ToString())"
                     TType="string" ButtonStyle="ButtonStyles.Default" Label="Default" />

    <CodeSnippet Language="HTML">
&lt;BootstrapSelect TItem="Country"
                 Data="@@countries"
                 TextField="@@((item) => item.Name)"
                 ValueField="@@((item) => item.Id.ToString())"
                 TType="string"
                 ButtonStyle="ButtonStyles.Default"/&gt;
    </CodeSnippet>

    <!-- Primary -->
    <BootstrapSelect TItem="Country" Data="@countries" TextField="@((item) => item.Name)" ValueField="@((item) => item.Id.ToString())"
                     TType="string" ButtonStyle="ButtonStyles.Primary" Label="Primary" />
    <CodeSnippet Language="HTML">
&lt;BootstrapSelect TItem="Country"
                 Data="@@countries"
                 TextField="@@((item) => item.Name)"
                 ValueField="@@((item) => item.Id.ToString())"
                 TType="string"
                 ButtonStyle="ButtonStyles.Primary"/&gt;
    </CodeSnippet>

    <!-- Info -->
    <BootstrapSelect TItem="Country" Data="@countries" TextField="@((item) => item.Name)" ValueField="@((item) => item.Id.ToString())"
                     TType="string" ButtonStyle="ButtonStyles.Info" Label="Info" />

    <CodeSnippet Language="HTML">
&lt;BootstrapSelect TItem="Country"
                 Data="@@countries"
                 TextField="@@((item) => item.Name)"
                 ValueField="@@((item) => item.Id.ToString())"
                 TType="string"
                 ButtonStyle="ButtonStyles.Info"/&gt;
    </CodeSnippet>

    <!-- Success -->
    <BootstrapSelect TItem="Country" Data="@countries" TextField="@((item) => item.Name)" ValueField="@((item) => item.Id.ToString())"
                     TType="string" ButtonStyle="ButtonStyles.Success" Label="Success" />

    <CodeSnippet Language="HTML">
&lt;BootstrapSelect TItem="Country"
                 Data="@@countries"
                 TextField="@@((item) => item.Name)"
                 ValueField="@@((item) => item.Id.ToString())"
                 TType="string"
                 ButtonStyle="ButtonStyles.Success"/&gt;
    </CodeSnippet>

    <!-- Warning -->
    <BootstrapSelect TItem="Country" Data="@countries" TextField="@((item) => item.Name)" ValueField="@((item) => item.Id.ToString())"
                     TType="string" ButtonStyle="ButtonStyles.Warning" Label="Warning" />

    <CodeSnippet Language="HTML">
&lt;BootstrapSelect TItem="Country"
                 Data="@@countries"
                 TextField="@@((item) => item.Name)"
                 ValueField="@@((item) => item.Id.ToString())"
                 TType="string"
                 ButtonStyle="ButtonStyles.Warning"/&gt;
    </CodeSnippet>

    <!-- Danger -->
    <BootstrapSelect TItem="Country" Data="@countries" TextField="@((item) => item.Name)" ValueField="@((item) => item.Id.ToString())"
                     TType="string" ButtonStyle="ButtonStyles.Danger" Label="Danger" />

    <CodeSnippet Language="HTML">
&lt;BootstrapSelect TItem="Country"
                 Data="@@countries"
                 TextField="@@((item) => item.Name)"
                 ValueField="@@((item) => item.Id.ToString())"
                 TType="string"
                 ButtonStyle="ButtonStyles.Danger"/&gt;
    </CodeSnippet>

    <BootstrapSelect TItem="Country" Data="@countries" TextField="@((item) => item.Name)" ValueField="@((item) => item.Id.ToString())"
                     TType="string" ButtonStyle="ButtonStyles.Custom" Label="Custom" />

    <!-- Custom -->
    <CodeSnippet Language="HTML">
&lt;BootstrapSelect TItem="Country"
                 Data="@@countries"
                 TextField="@@((item) => item.Name)"
                 ValueField="@@((item) => item.Id.ToString())"
                 TType="string"
                 ButtonStyle="ButtonStyles.Custom"/&gt;
    </CodeSnippet>

    <!-- Width 250px -->
    <BootstrapSelect TItem="Country" Data="@countries" TextField="@((item) => item.Name)" ValueField="@((item) => item.Id.ToString())"
                     TType="string" Width="250px" Label="Width: 250px" />

    <CodeSnippet Language="HTML">
&lt;BootstrapSelect TItem="Country"
                 TextField="@@((item) => item.Name)"
                 Data="@@countries"
                 ValueField="@@((item) => item.Id.ToString())"
                 TType="string"
                 Width="250px" /&gt;
    </CodeSnippet>

    <!-- Width: 75% -->
    <BootstrapSelect TItem="Country" Data="@countries" TextField="@((item) => item.Name)" ValueField="@((item) => item.Id.ToString())"
                     TType="string" Width="75%" Label="Width: 75%" />

    <CodeSnippet Language="HTML">
&lt;BootstrapSelect TItem="Country"
                 Data="@@countries"
                 TextField="@@((item) => item.Name)"
                 ValueField="@@((item) => item.Id.ToString())"
                 TType="string"
                 Width="75%"/&gt;
    </CodeSnippet>

    <!-- Show Tick -->
    <BootstrapSelect TItem="Country" Data="@countries" TextField="@((item) => item.Name)" ValueField="@((item) => item.Id.ToString())"
                     TType="string" ShowTick="true" Label="Show Tick" />

    <CodeSnippet Language="HTML">
&lt;BootstrapSelect TItem="Country"
                 Data="@@countries"
                 TextField="@@((item) => item.Name)"
                 ValueField="@@((item) => item.Id.ToString())"
                 TType="string"
                 ShowTick="true"/&gt;
    </CodeSnippet>

    <!-- Subtext -->
    <BootstrapSelect TItem="Country" Data="@countries" TextField="@((item) => item.Name)" SubTextField="@(item => item.Culture)" ValueField="@((item) => item.Id.ToString())"
                     TType="string" ShowTick="true" Label="SubText" />

    <CodeSnippet Language="HTML">
&lt;BootstrapSelect TItem="Country"
                 Data="@@countries"
                 TextField="@@((item) => item.Name)" 
                 ValueField="@@((item) => item.Id.ToString())" 
                 SubTextField="@@((item) => item.Culture)" 
                 TType="string" 
                 ShowTick="true"/&gt;
    </CodeSnippet>

    <!-- Icon -->
    <BootstrapSelect TItem="Country" Data="@countries" TextField="@((item) => item.Name)" IconField="@(item => item.FlagIcon)" ValueField="@((item) => item.Id.ToString())"
                     TType="string" ShowTick="true" Label="Icon" />

    <CodeSnippet Language="HTML">
&lt;BootstrapSelect TItem="Country"
                 Data="@@countries"
                 TextField="@@((item) => item.Name)"
                 ValueField="@@((item) => item.Id.ToString())"
                 IconField="@@((item) => item.FlagIcon)"
                 TType="string"
                 ShowTick="true" /&gt;
    </CodeSnippet>
    
    <!-- Disabled -->
    <BootstrapSelect TItem="Country" Data="@countries" TextField="@((item) => item.Name)" ValueField="@((item) => item.Id.ToString())"
                     TType="string" ShowTick="true" Label="Disabled" Disabled="true" />

    <CodeSnippet Language="HTML">
        &lt;BootstrapSelect TItem="Country" Data="@@countries"
        TextField="@@((item) => item.Name)"
        ValueField="@@((item) => item.Id)"
        TType="string"
        ShowTick="true"
        Disabled="true" /&gt;
    </CodeSnippet>
    
    <!-- Custom CSS Class -->
    <BootstrapSelect TItem="Country" Data="@countries" TextField="@((item) => item.Name)" ValueField="@((item) => item.Id.ToString())"
                     TType="string" ShowTick="true" CssClass="my-class" Label="Custom CSS Class" />

    <CodeSnippet Language="HTML">
        &lt;BootstrapSelect TItem="Country" Data="@@countries"
        TextField="@@((item) => item.Name)"
        ValueField="@@((item) => item.Id)"
        TType="string"
        ShowTick="true"
        CssClass="my-class" /&gt;
    </CodeSnippet>

}

@code {
    private IList<Country> countries;
    
    protected override async Task OnInitializedAsync()
    {
        countries = await Http.GetFromJsonAsync<List<Country>>("sample-data/countries.json");
    }
}
